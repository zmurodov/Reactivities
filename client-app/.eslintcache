[{"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\index.tsx":"1","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\app\\models\\activity.ts":"4","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\nav\\Navbar.tsx":"5","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"6","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"7","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"8","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"9","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\app\\api\\agent.tsx":"10","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"11"},{"size":565,"mtime":1609710486173,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":3448,"mtime":1609784399981,"results":"15","hashOfConfig":"13"},{"size":173,"mtime":1609707871721,"results":"16","hashOfConfig":"13"},{"size":738,"mtime":1609770996923,"results":"17","hashOfConfig":"13"},{"size":2250,"mtime":1609784467356,"results":"18","hashOfConfig":"13"},{"size":2082,"mtime":1609784581408,"results":"19","hashOfConfig":"13"},{"size":1295,"mtime":1609780038640,"results":"20","hashOfConfig":"13"},{"size":2772,"mtime":1609783518540,"results":"21","hashOfConfig":"13"},{"size":1180,"mtime":1609782627102,"results":"22","hashOfConfig":"13"},{"size":363,"mtime":1609783124473,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"hmfzd0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\index.tsx",[],["50","51"],"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\app\\models\\activity.ts",[],["52","53"],"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\nav\\Navbar.tsx",[],"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["54","55"],"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",["56"],"import React from 'react'\r\nimport {Button, Card, Icon, Image} from 'semantic-ui-react'\r\nimport {IActivity} from \"../../../app/models/activity\";\r\n\r\ninterface IProps {\r\n    activity: IActivity\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport const ActivityDetails: React.FC<IProps> = (\r\n    {\r\n        activity,\r\n        setEditMode\r\n    }) => {\r\n    return (\r\n        <Card fluid>\r\n            <Image src={`/assets/categoryImages/${activity?.category}.jpg`} wrapped ui={false}/>\r\n            <Card.Content>\r\n                <Card.Header>{activity.title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span>{activity.date}</span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                    {activity.description}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button.Group widths={2}>\r\n                    <Button onClick={() => setEditMode(true)} basic color=\"blue\" content='Edit'/>\r\n                    <Button basic color=\"grey\" content='Cancel'/>\r\n                </Button.Group>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"D:\\Projects\\.NET\\Reactivities\\client-app\\src\\app\\api\\agent.tsx",["57"],"import axios, {AxiosResponse} from \"axios\";\r\nimport {IActivity} from \"../models/activity\";\r\n\r\naxios.defaults.baseURL = 'https://localhost:5001/api'\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms))\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post('/activities', activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.delete(`/activities/${id}`)\r\n}\r\n\r\nexport default {\r\n    Activities\r\n}","D:\\Projects\\.NET\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":53,"column":43,"nodeType":"66","messageId":"67","endLine":53,"endColumn":45},{"ruleId":"64","severity":1,"message":"65","line":53,"column":66,"nodeType":"66","messageId":"67","endLine":53,"endColumn":68},{"ruleId":"68","severity":1,"message":"69","line":2,"column":23,"nodeType":"70","messageId":"71","endLine":2,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":26,"column":1,"nodeType":"74","endLine":28,"endColumn":2},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],["75"],["76"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","@typescript-eslint/no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]